{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About","text":"Toolbox <p>My personal toolbox library</p>"},{"location":"#features","title":"Features","text":""},{"location":"#supported-platforms","title":"Supported Platforms","text":"<p>This is a KMP (kotlin multiplatform) library and the provided modules do support following platforms.</p> Module android ios windows wasm Info Core <code>core</code>                    \u2714                                     \u2714                                     \u2714                                     \u2714                  App <code>app</code>                    \u2714                                     \u2714                                     \u2714                                     \u2714                  Modules <code>ui</code>                    \u2714                                     \u2714                                     \u2714                                     \u2714                  <code>zip</code>                    \u2714                                     \u2714                                     \u2714                                     \u2714                  <code>csv</code>                    \u2714                                     -                                     \u2714                                     -                  <code>backup</code>                    \u2714                                     \u2714                                     \u2714                                     \u2714                  <code>service</code>                    \u2714                                     -                                     -                                     -                  <code>form</code>                    \u2714                                     \u2714                                     \u2714                                     \u2714                  <code>table</code>                    \u2714                                     \u2714                                     \u2714                                     \u2714                  <code>room</code>                    \u2714                                     -                                     \u2714                                     -                  <code>ads</code>                    \u2714                                     -                                     -                                     -                  <code>proversion</code>                    \u2714                                     -                                     -                                     -"},{"location":"#demo","title":"Demo","text":"<p>A full demo is included inside the demo module, it shows nearly every usage with working examples.</p>"},{"location":"compatibility/","title":"Compatibility","text":"<p>Information about the compatibility of this library with all my other libraries can be found here.</p>"},{"location":"dependencies/","title":"Dependencies","text":""},{"location":"dependencies/#compose","title":"Compose","text":"Dependency Version Infos Jetbrains Compose Multiplatform <code>1.9.0</code> Depends on jetpack (androidx) compose <code>1.9.0</code> Jetbrains Material 3 <code>1.8.2</code> Depends on jetpack (androidx) material3 <code>1.3.2</code> <p>More details about the jetpack dependencies can be found in JetBrains Release Notes.</p> <p>Warning</p> <p>I try to use as few experimental APIs as possible, but this library does use a few experimental APIs which are still marked as experimental. I will provide new versions as soon as possible if experimental APIs change or become stable.</p>"},{"location":"dependencies/#modules","title":"Modules","text":"Module Dependency Version Core <code>core</code> - App <code>app</code> - Modules <code>ui</code> - <code>zip</code> - <code>csv</code> - <code>backup</code> - <code>service</code> - <code>form</code> - <code>table</code> - <code>room</code> - <code>ads</code> - <code>proversion</code> -"},{"location":"me/","title":"About Me","text":""},{"location":"me/#about-me","title":"About Me","text":"<p>Check out my main homepage to get an impression of what I do and my open source libraries, android apps and garmin watchfaces that I've developed.</p> <p>https://mflisar.github.io/</p>"},{"location":"other-libraries/","title":"Other Libraries","text":""},{"location":"other-libraries/#other-libraries","title":"Other Libraries","text":"<p>Here you can find an overview of my main libraries that do all play well together including some short descriptions.</p> Utilities Library Description CacheFileProvider This is a minimal library with a few lines of code and without dependencies that offers a simple file provider (simple read only access for sharing files with other apps). FeedbackManager This is a very small library that allows you to send feedback from an app without internet permission via email, either directly or via an unintrusive notification. Libraries Library Description KotBilling A kotlin coroutine based solution for handling in app purchases for billing library version 7. KotPreferences With this library you can declare preferences via kotlin delegates and observe and update them via kotlin flows. This works with any storage implementation, an implementation for JetPack DataStore is provided already. Lumberjack This is a full logging library with a build in way to log to console, file or any custom place as well as optional extensions to send a log file via mail or show it on the device. Compose Image Library Description ComposeChangelog This library offers you a a changelog dialog for compose including the ability to show new logs on app start only as well as filtering and customisation. ComposeColors A simple collection of colors that can be used inside any KMP compose project. ComposeDebugDrawer This library offers you a simple and easily extendable debug drawer. ComposeDialogs A compose framework for modal dialogs. ComposePreferences This library offers you preference screens for compose including the ability of endless nesting subscreens as well as simple integration of custom preferences. ComposeThemer This is a full compose theme engine that handles applying a theme as well as updating the system ui elements. Extendible and allows to simply apply user selected themes inside your app. Unofficial Projects Library Description kmp-parcelize a kmp parcelize library that allows you to use the `@Parcelize` annotation in your kmp projects kmp-library a collection of gradle plugins for my demo projects as well as for my own apps kmp-democomposables a collection of composables that I use for my demo projects"},{"location":"setup/","title":"Setup","text":"<p>This library is distributed via maven central.</p> <p>Add dependencies like following to use this library inside your project.</p> DependenciesVersion Catalog <p>Simply add the dependencies inside your <code>build.gradle.kts</code> file.</p> build.gradle.kts<pre><code>val toolbox = \"&lt;LATEST-VERSION&gt;\"\n\n// core\nimplementation(\"io.github.mflisar.toolbox:core:$toolbox\")\n\n// app\nimplementation(\"io.github.mflisar.toolbox:app:$toolbox\")\n\n// modules\nimplementation(\"io.github.mflisar.toolbox:ui:$toolbox\")\nimplementation(\"io.github.mflisar.toolbox:zip:$toolbox\")\nimplementation(\"io.github.mflisar.toolbox:csv:$toolbox\")\nimplementation(\"io.github.mflisar.toolbox:backup:$toolbox\")\nimplementation(\"io.github.mflisar.toolbox:service:$toolbox\")\nimplementation(\"io.github.mflisar.toolbox:form:$toolbox\")\nimplementation(\"io.github.mflisar.toolbox:table:$toolbox\")\nimplementation(\"io.github.mflisar.toolbox:room:$toolbox\")\nimplementation(\"io.github.mflisar.toolbox:ads:$toolbox\")\nimplementation(\"io.github.mflisar.toolbox:proversion:$toolbox\")\n</code></pre> <p>Define the dependencies inside your <code>libs.versions.toml</code> file.</p> libs.versions.toml<pre><code>[versions]\n\ntoolbox = \"&lt;LATEST-VERSION&gt;\"\n\n[libraries]\n\n# core\ntoolbox-core = { module = \"io.github.mflisar.toolbox:core\", version.ref = \"toolbox\" }\n\n# app\ntoolbox-app = { module = \"io.github.mflisar.toolbox:app\", version.ref = \"toolbox\" }\n\n# modules\ntoolbox-ui = { module = \"io.github.mflisar.toolbox:ui\", version.ref = \"toolbox\" }\ntoolbox-zip = { module = \"io.github.mflisar.toolbox:zip\", version.ref = \"toolbox\" }\ntoolbox-csv = { module = \"io.github.mflisar.toolbox:csv\", version.ref = \"toolbox\" }\ntoolbox-backup = { module = \"io.github.mflisar.toolbox:backup\", version.ref = \"toolbox\" }\ntoolbox-service = { module = \"io.github.mflisar.toolbox:service\", version.ref = \"toolbox\" }\ntoolbox-form = { module = \"io.github.mflisar.toolbox:form\", version.ref = \"toolbox\" }\ntoolbox-table = { module = \"io.github.mflisar.toolbox:table\", version.ref = \"toolbox\" }\ntoolbox-room = { module = \"io.github.mflisar.toolbox:room\", version.ref = \"toolbox\" }\ntoolbox-ads = { module = \"io.github.mflisar.toolbox:ads\", version.ref = \"toolbox\" }\ntoolbox-proversion = { module = \"io.github.mflisar.toolbox:proversion\", version.ref = \"toolbox\" }\n</code></pre> <p>And then use the definitions in your projects like following:</p> build.gradle.kts<pre><code># core\nimplementation(libs.toolbox.core)\n\n# app\nimplementation(libs.toolbox.app)\n\n# modules\nimplementation(libs.toolbox.ui)\nimplementation(libs.toolbox.zip)\nimplementation(libs.toolbox.csv)\nimplementation(libs.toolbox.backup)\nimplementation(libs.toolbox.service)\nimplementation(libs.toolbox.form)\nimplementation(libs.toolbox.table)\nimplementation(libs.toolbox.room)\nimplementation(libs.toolbox.ads)\nimplementation(libs.toolbox.proversion)\n</code></pre>"}]}